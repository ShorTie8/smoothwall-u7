#!/bin/bash
#
# SmoothWall Build system.
#
# (c) SmoothWall Ltd 2005
#
# This code is distributed under the terms of the GPL v2.

# Continue a croaked DL?
set | grep "CONTINUE_DL=" >/dev/null 2>&1
if [ "$?" -eq 0 ]; then
  CONTINUE_DL="-c "
else
  CONTINUE_DL=""
fi

# Check SSL certs or not?
set | grep "NO_CHECK_CERT=" >/dev/null 2>&1
if [ "$?" -eq 0 ]; then
  NO_CHECK_CERT="--no-check-certificate "
else
  NO_CHECK_CERT=""
fi

# Mirror root
set | grep "MIRROR_UNO=" >/dev/null 2>&1 || MIRROR_UNO=""
set | grep "MIRROR_DOS=" >/dev/null 2>&1 || MIRROR_DOS="http://downloads.smoothwall.org/buildmirror"

DIRECTORY=$1
URL=$2
EXPECTED_MD5=$3

if [ "$DIRECTORY" = "" -o "$URL" = "" ]; then
	echo "Usage: $0 <directory> <url> [expected md5]"
	exit 0
fi

FILENAME=/`basename $URL`

if [ ! -e "$DIRECTORY/$FILENAME.done" ]; then
	if [ "$MIRROR_UNO" != "" ]; then
		wget ${CONTINUE_DL}${NO_CHECK_CERT}--directory $DIRECTORY $MIRROR_UNO/$FILENAME
	else
		false
	fi
	if [ $? -ne 0 ]; then
		if [ "$MIRROR_DOS" != "" ]; then
			wget ${CONTINUE_DL}${NO_CHECK_CERT}--directory $DIRECTORY $MIRROR_DOS/$FILENAME
		else
			false
		fi
	fi
	if [ $? -ne 0 ]; then
		wget ${CONTINUE_DL}${NO_CHECK_CERT}--directory $DIRECTORY $URL
		if [ $? -ne 0 ]; then
			echo "Download failed"
			exit 1
		fi
	fi
	if [ "$EXPECTED_MD5" != "" ]; then
		MD5=`md5sum $DIRECTORY/$FILENAME | cut -d " " -f 1`
		if [ "$MD5" != "$EXPECTED_MD5" ]; then
			echo "MD5 missmatch.  Was $MD5, meant to be $EXPECTED_MD5"
			rm -f $DIRECTORY/$FILENAME
			exit 1
		fi
	fi
	touch $DIRECTORY/$FILENAME.done
fi

exit 0
