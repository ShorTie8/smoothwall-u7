#!/bin/bash

>/tmp/hd.list
>/tmp/cd.list
>/tmp/nic.list

CLS="\033[0;0f\033[2J"
BO="\033[1m"
UL="\033[4m"
BOUL="\033[1;4m"
NO="\033[0m"

PCI_IDS="/etc/filled.pci.ids"
TITLE="$CLS            ${BOUL}Smoothwall Express 3 (Phaeton Development) Installation$NO"

#echo "Preparing lists of CDROM and hard drives and NICs"
echo "Preparing lists of CDROM and hard drives"
OPWD=$PWD;cd /sys/block

ls -C1 | while read a; do
  if [ -e $a/device ]; then
    # if an optical drive, add it to /tmp/cd.list
    egrep "ide:m-cdrom|scsi:t-0x05" $a/device/modalias >/dev/null 2>&1
    if [ $? -eq 0 ]; then
      echo "$a `cat $a/size`" >> /tmp/cd.list
    fi
    # if a disk drive, add it to /tmp/hd.list
    egrep "ide:m-disk|scsi:t-0x00" $a/device/modalias >/dev/null 2>&1
    if [ $? -eq 0 ]; then
      echo "$a `cat $a/size`" >> /tmp/hd.list
    fi
  fi
done
cd $OPWD

# skip NICs until setup works
if [ 1 -lt 0 ]; then
OPWD=$PWD;cd /sys/class/net
ls -C1 | while read a; do
  VNDNO=""; VND=""; DEVNO=""; DEV=""; MAC=""
  if [ -e $a/device/vendor ]; then
    VNDNO=`cat $a/device/vendor | sed -e 's/0x//'`
    VND=`egrep "^$VNDNO  " $PCI_IDS | head -1 | sed -e 's/'"$VNDNO  "'//'`
    if [ "x$VND" == "x" ]; then VND="0x$VNDNO"; fi
  fi
  if [ -e $a/device/device ]; then
    DEVNO=`cat $a/device/device | sed -e 's/0x//'`
    DEV=`egrep "$VNDNO	$DEVNO|$VNDNO		$VNDNO $DEVNO" $PCI_IDS | head -1 | sed -e 's/.*'"$DEVNO  "'//'`
    if [ "x$DEV" == "x" ]; then DEV="0x$DEVNO"; fi
  fi
  MAC=`cat $a/address | sed -e 's/://g'`
  if [ "$MAC" != "000000000000" -a "$MAC" != "" ]; then
    echo "$a|$MAC|$VND|$DEV"
  fi
done > /tmp/nic.list
cd $OPWD
endif
  

# Now get the config info

while [ 1 -eq 1 ]; do
  # Hard Drive selection
  echo -en "$TITLE"
  echo
  echo
  echo -e "${BO}Disk Drive Selection$NO"

  unset b
  typeset -i i b
  i=1
  while read a b; do
    b=b/2/1024
    hd_dev[$i]=$a
    hd_size[$i]=$b
    echo -n "  $i. $a - ${hd_size[$i]}MiB"
    if [ $i -eq 1 ]; then echo " (default)"; else echo; fi
    i=i+1
  done < /tmp/hd.list
  echo

  echo -n "[1]        Selection: "
  read hd #</dev/tty
  if [ x$hd == "x" ]; then hd=1; fi
  if [ $hd -lt $i ]; then break; fi
done

while [ 1 -eq 1 ]; do
  # CD/DVD Drive selection
  echo -en "$TITLE"
  echo
  echo
  echo -e "${BO}CD/DVD Drive Selection${NO}"

  i=1
  while read a b; do
    cd_dev[$i]=$a
    echo -n "  $i. $a"
    if [ $i -eq 1 ]; then echo "( default)"; else echo; fi
    i=i+1
  done < /tmp/cd.list
  echo

  echo -n "[1]        Selection: "
  read cd #</dev/tty
  if [ x$CD == "x" ]; then CD=1; fi
  if [ $CD -lt $i ]; then break; fi
done

while [ 1 -eq 1 ]; do
# Dev Pkgs
  echo -en "$TITLE"
  echo
  echo
  echo -e "${BO}Development Packages${NO}"

  i=1; echo -e "  $i. ${UL}Do not${NO} install (default)"
  i=2; echo "  $i. Install dev. pkgs."
  echo

  echo -n "[1]        Selection: "
  read dev #</dev/tty
  if [ x$dev == "x" ]; then dev=1; fi
  if [ $dev -eq 1 ]; then minMiB=9000; break; fi
  if [ $dev -eq 2 ]; then minMiB=18000; break; fi
done

while [ 1 -eq 1 ]; do
  # Disk Partitioning
  echo -en "$TITLE"
  echo
  echo
  echo -e "${BO}Disk Utilization${NO}"

  typeset -i hd_size[$hd]  driveMiB  maxMiB
  driveMiB="${hd_size[$hd]}"
  echo "      Press <ENTER> to use entire disk or enter a number between"
  echo "      $minMiB and $driveMiB to limit disk usage to that many MiB."
  echo

  echo -en "[whole disk]        Selection: "
  read maxMiB #</dev/tty
  if [ x$maxMiB == x ]; then maxMiB="0"; fi
  if [ $maxMiB -eq 0 ]; then break; fi
  if [ $maxMiB -ge $minMiB -a $maxMiB -le $driveMiB ]; then break; fi
done

while [ 1 -eq 1 ]; do
  # Filesystem
  echo -en "$TITLE"
  echo
  echo
  echo -e "${BO}Filesystem${NO}"

  i=1; echo "  $i. EXT3 (default)"
  i=2; echo "  $i. ReiserFS"
  echo

  echo -n "[1]        Selection: "
  read filesys #</dev/tty
  if [ x$filesys == x ]; then filesys="1"; fi
  if [ $filesys -lt 3 ]; then break; fi
done

while [ 1 -eq 1 ]; do
  # Boot loader
  echo -en "$TITLE"
  echo
  echo
  echo -e "${BO}Boot Loader${NO}"

  i=1; echo "  $i. LILO (default)"
  i=2; echo "  $i. GRUB"
  echo

  echo -n "[1]        Selection: "
  read loader #</dev/tty
  if [ x$loader == x ]; then loader="1"; fi
  if [ $loader -lt 3 ]; then break; fi
done

# setup is limited to eth[0-3]; so skip NIC renaming for now.
#
if [ 1 -lt 0 ]; then
typeset -i nic_cnt
nic_cnt=1
OIFS="$IFS"; IFS="|"
while read a; do
  set $a
  DEV[$nic_cnt]="$1"
  MAC[$nic_cnt]="$2"
  VND[$nic_cnt]="$3"
  MDL[$nic_cnt]="$4"
  CLR[$nic_cnt]="not named"
  nic_cnt=nic_cnt+1
done < /tmp/nic.list
IFS="$OIFS"

while [ 1 -eq 1 ]; do
  # NIC names
  echo -en "$TITLE"
  echo
  echo
  echo -e "${BO}Assign Persistent NIC names${NO}"
  echo -e "  Assign names to your Network Interface Cards. It is recommended you use"
  echo -e "  standard interface colors; however, you may use (almost) any names you wish."
  echo

  i=1
  while [ $i -lt $nic_cnt ]; do
    echo -e "  $i. ${BO}${DEV[$i]}${NO} -> ${BO}${CLR[$i]}${NO}"
    echo -e "        (${MAC[$i]}|${VND[$i]}|${MDL[$i]})"
    i=i+1
  done < /tmp/nic.list
  echo "  F. Finished naming NICs"
  echo

  echo -n "           Selection: "
  read nic #</dev/tty
  if [ x$nic == x ]; then continue; fi
  if [ $nic -gt $nic_cnt ]; then continue; fi
  if [ $nic -lt 1 ]; then continue; fi
  if [ x$nic == xF ]; then break; fi
  echo -n "                Name: "
  read CLR[$nic] #</dev/tty
done
endif # skipping NIC rename

while [ 1 == 1 ]; do
  echo -e "$TITLE"
  echo
  echo

  echo "Confirm installation configuration"
  echo
  echo -e "  Installing on ${BO}/dev/${hd_dev[$hd]}${NO}"
  echo -e "  Using CD/DVD drive ${BO}/dev/${cd_dev[$CD]}${NO}"
  if [ $dev -eq 1 ]; then
    echo -e "  ${BO}Skipping${NO} development packages"
  else
    echo -e "  ${BO}Installing${NO} development packages"
  fi
  if [ $maxMiB == "0" ]; then
    echo -e "  Using ${BO}whole disk${NO} (${hd_size[$hd]}MiB)"
  else
    echo -e "  Using first ${BO}${maxMiB}MiB${NO} of hard drive"
  fi
  if [ $filesys == "1" ]; then
    echo -e "  Making ${BO}EXT3${NO} filesystems"
  else
    echo -e "  Making ${BO}ReiserFS${NO} filesystems"
  fi
  if [ $loader == "1" ]; then
    echo -e "  Installing ${BO}LILO${NO} boot loader"
  else
    echo -e "  Installing ${BO}GRUB${NO} boot loader"
  fi
  echo

  # Skip NIC renaming for now
  #
  if [ 1 -lt 0 ]; then
  typeset -i ypos
  ypos=6
  echo -e "\033[${ypos};40f  Assigning persistent NIC names:"
  ypos=ypos+1
  i=1;
  while [ $i -lt $nic_cnt ]; do
    if [ "${CLR[$i]}" != "not named" ]; then
      echo -e "\033[${ypos};40f    ${DEV[$i]} -> ${BO}${CLR[$i]}${NO}"
      ypos=ypos+1
    fi
    i=i+1
  done
  endif # skip NIC renaming

  echo -en "\033[20;0fIf this is OK, type yes."
  echo -en "\033[21;0fTo restart, type no."
  echo -en "\033[23;0fOK? "
  read a #</dev/tty
  if [ x$a == "xyes" ]; then
    export hd CD dev maxMiB filesys loader
    break;
  elseif [ x$a == "xno" ]; then
    echo "Restarting installation configuration..."
    sleep 1
    exit
  else
    echo -en "\007 ??"
    sleep 2
  fi
done
